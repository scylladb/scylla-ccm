name: CCM Integration tests (using Nix)

on:
  workflow_call:
    inputs:
      reloc_version:
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v20
      with:
        github_access_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Cache binary versions
      id: cache-versions
      uses: actions/cache@v2
      with:
        path: |
          ~/.ccm/repository
          ~/.ccm/scylla-repository
        key: ${{ runner.os }}-${{ inputs.reloc_version }}-binaries

    - name: Set environmental variables
      run: |
        echo "SCYLLA_VERSION=unstable/master:${{ inputs.reloc_version }}" >> "$GITHUB_ENV"

    - name: Download versions
      if: steps.cache-versions.outputs.cache-hit != 'true'
      run: |
        normalized=$(echo ${{ inputs.reloc_version }} | tr ':' '_')
        if [ ! -f ~/.ccm/scylla-repository/unstable/master/$normalized ]; then
          nix develop --command ./ccm create temp -n 1 --scylla --version $SCYLLA_VERSION
          nix develop --command ./ccm remove
        fi
        nix develop --command ./ccm create temp-cas -n 1 --version 3.11.4 > /dev/null
        nix develop --command ./ccm remove

    - name: Test with pytest (python 3.9)
      run: |
        nix develop --command python3.9 -m pytest ./tests -x

    - name: Test with pytest (python 3.11)
      run: |
        nix develop --command python3.11 -m pytest ./tests -x

    - name: Copy logs/results
      if: contains(github.event.pull_request.labels.*.name, 'PR-upload-log')
      uses: actions/upload-artifact@v4
      with:
        name: ccm-tests-log
        path: tests/test_results/
